#!/bin/bash
set -o nounset
# set -o errexit
set -o xtrace
set -o pipefail

url=$1

if [[ "${url##*.}" == "json" ]]
then
    filename=$(cat "${url}" | jq '._filename')
else
    filename=$(youtube-dl --print-json --add-metadata --write-info-json -x "${url}" | jq '._filename')
fi

file=$(sed -e 's/^"//' -e 's/"$//' <<<$filename) # remove quotes returned by jq
file=${file%.*}.info.json

escapedFile=$(echo $file | sed -e ':t;N;s/\n/\\n/;bt' | sed 's/\([ \o47()"&;\\]\)/\\\1/g;s/\o15/\\r/g' | sed 's/\([][}{]\)/\\\1/g')

filefind=$(find -iname "${escapedFile%%.*}.*" -not -iname "*.pt*" | grep -i "\.opus\|\.mkv\|\.webm\|\.mp4$")
media=${filefind#./}
echo media: $media

awky='BEGIN{ partnumber=0} /^[0-9]/ { a= $1; if(b!="") printf "echo ffmpeg -i ${filename} -ss %1s -to %1s -c: copy ${filename%%.*}.pt%03d.${filename##*.}\n",b,a,partnumber ; b=a; partnumber+=1 } END{ printf "echo ffmpeg -i ${filename} -ss %1s -c: copy -map_metadata -1 ${filename%%.*}.pt%03d.${filename##*.}\n",b,partnumber}'

if [[ ! -z $(cat "$file" | jq '.description' | sed 's/\\n/\n/g' | grep -o '[0-9:]\{2\}*[0-9]\{1\}*\:[0-9]\{2\}') ]]
then
  cat "$file" | jq '.description' | sed 's/\\n/\n/g' | grep -o '[0-9:]\{2\}*[0-9]\{1\}*\:[0-9]\{2\}' | awk "$awky" | filename=\"${media}\" bash > "${media%.*}.list"
  bash "${media%.*}.list" && rm "${media%.*}.list"
else
  echo "splitting by silence..."
  split-by-silence "${media}" -96
fi
find -iname "${media%.*}.pt*" | sort | while read file; do echo "$file"; autotag "$file"; done
